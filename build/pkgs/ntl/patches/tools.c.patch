20a21,44
> /*
>    The following code differs from vanilla NTL 5.4.2.
> 
>    We add a SetErrorCallbackFunction(). This sets a global callback function _function_,
>    which gets called with parameter _context_ and an error message string whenever Error()
>    gets called.
> 
>    Note that if the custom error handler *returns*, then NTL will dump the error message
>    back to stderr and abort() as it habitually does.
> 
>    -- David Harvey (2008-04-12)
> */
> 
> void (*ErrorCallbackFunction)(const char*, void*) = NULL;
> void *ErrorCallbackContext = NULL;
> 
> 
> void SetErrorCallbackFunction(void (*function)(const char*, void*), void *context)
> {
>    ErrorCallbackFunction = function;
>    ErrorCallbackContext = context;
> }
> 
> 
22a47,49
>    if (ErrorCallbackFunction != NULL)
>       ErrorCallbackFunction(s, ErrorCallbackContext);
> 
