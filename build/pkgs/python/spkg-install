#!/usr/bin/env bash
###########################################
## Python
###########################################

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

# PATCH

cp patches/ctypes__init__.py src/Lib/ctypes/__init__.py
if [ $? -ne 0 ]; then
    echo "Error copying patched ctypes"
    exit 1
fi

cp patches/locale.py src/Lib/
if [ $? -ne 0 ]; then
    echo "Error copying patched locale.py"
    exit 1
fi

cp patches/pkgutil.py src/Lib/pkgutil.py
if [ $? -ne 0 ]; then
    echo "Error copying patched pkgutil.py"
    exit 1
fi


# Program around weird bug in build process:
#      Apparently if you have this:
#         export DISTUTILS_DEBUG=1
#      in your environment variables, the build craps out.  No idea why this is.
#       -- Yi Qiang

unset DISTUTILS_DEBUG


cd src

touch Include/*

# WE do *not* use $MAKE, since e.g., "make -j10" does *not*
# work for building Python.
MAKE="make"
export MAKE

patch()
{
    # The following patch for fixing broken readline behavior on
    # Itanium Linux definitely does *not* work on anything else.
    if [ "`uname -m`" = "ia64" -a "`uname`" = "Linux" ]; then
        echo "Updating readline.c for Linux/Itanium"
	cp ../patches/readline.c Modules/readline.c
    fi
}

build()
{
    # do *not* put --enable-shared here!  this breaks building
    # shared extension modules, at least in Python 2.5.
    rm -f "$SAGE_LOCAL"/lib/libpython*

    if [ `uname` = "Darwin" -a "$SAGE64" = "yes" ]; then
        echo "64 bit OSX 10.5 build enabled"
        OPT="-g -fwrapv -O3 -m64 -Wall -Wstrict-prototypes"; export OPT
        ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL" --without-libpng --enable-unicode=ucs4 \
        --with-gcc="gcc -m64" --disable-toolbox-glue
    else
        ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL" --without-libpng --enable-unicode=ucs4
    fi


    if [ $? -ne 0 ]; then
        echo "Error configuring Python."
        exit 1
    fi

    $MAKE
    if [ $? -ne 0 ]; then
        echo "Error building Python."
        exit 1
    fi

    $MAKE -i install        # the "-i" is crucial, esp., in the case of a major upgrade
    if [ $? -ne 0 ]; then
        echo "Error installing Python."
        exit 1
    fi
}

patch

build

cd $SAGE_LOCAL/lib
rm -rf python/python2.5 python/python python python2.4
ln -s python2.5 python

# Make sure sufficient crypto support is available in the built python.  This is critical.
python -c "import md5"

if [ $? -eq 0 -a -f "$SAGE_LOCAL/bin/python" ];  then
    exit 0
else
    exit 1
fi
