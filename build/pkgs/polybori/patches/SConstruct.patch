--- ../src/polybori-0.6/SConstruct	2009-07-24 01:26:48.000000000 -0700
+++ SConstruct	2009-08-27 02:48:19.588518718 -0700
@@ -146,7 +146,12 @@
 opts.Add('CXXFLAGS', "C++ compiler flags",
          "-std=c++98 -ftemplate-depth-100",
          converter = Split)
-opts.Add('LINKFLAGS', "Linker flags", ['-s'], converter = Split)
+#The following linker flags causes the build to fail on OSX 10.4, but works on 10.5
+# opts.Add('LINKFLAGS', "Linker flags", ['-s'], converter = Split)
+# Instead we add "-m64" in case we build on multiarch in  64 bit mode (OSX now, Solaris later)
+if os.environ['SAGE64'] == "yes":
+         opts.Add('LINKFLAGS', "Linker flags", ['-m64'], converter = Split)
+#End modifications
 opts.Add('LIBS', 'custom libraries needed for build', [], converter = Split)
 
 opts.Add('PREFIX', 'installation prefix directory', '/usr/local')
@@ -320,7 +325,7 @@
 Help(opts.GenerateHelpText(env))
 
 have_l2h = have_t4h = False
-external_m4ri = False
+external_m4ri = True
 
 if not env.GetOption('clean'):
     conf = Configure(env)
@@ -510,8 +515,11 @@
 slib = env.SharedLibrary
 if env['SHLIBVERSIONING']:
     slib = VersionatedSharedLibrary
-#if env['PLATFORM']=="darwin":
-#    slib=env.LoadableModule
+# since "slib = VersionatedSharedLibrary" is broken on OSX 10.4 we use the 
+# following. We are currently not using shared libraries anyway due to
+# bugs in the deallocation of the various PolyBoRi libraries
+if env['PLATFORM']=="darwin":
+    slib=env.LoadableModule
 
 
 libCuddShared = slib(CuddPath(cudd_name), list(shared_resources))
@@ -1269,6 +1277,11 @@
     env.AlwaysBuild(ipboribin)   
     env.Alias('install', ipboribin)
 
+    # we dump the flags for reuse by Sage
+    if not path.exists(InstPath()):
+        Execute(Mkdir(InstPath())) 
+    opts.Save(InstPath("flags.conf"), env)
+
 env.Alias('prepare-devel', devellibs + readabledevellibs)
 env.Alias('prepare-install', [pyroot, DocPath()])
 
