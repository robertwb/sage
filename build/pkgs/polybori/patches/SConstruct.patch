--- ../src/polybori-0.6.4/SConstruct	2010-01-29 01:02:02.000000000 -0800
+++ SConstruct	2010-04-27 00:22:46.000000000 -0700
@@ -164,7 +164,14 @@
     else:
         print "Flags", flag, "not in default environment!"        
     
-opts.Add('LINKFLAGS', "Linker flags", ['-s'], converter = Split)
+#The following linker flags causes the build to fail on OSX 10.4, but works on 10.5
+# opts.Add('LINKFLAGS', "Linker flags", ['-s'], converter = Split)
+# Instead we add "-m64" in case we build on multiarch in  64 bit mode (OSX now, Solaris later)
+if os.environ['SAGE64'] == "yes":
+         opts.Add('LINKFLAGS', "Linker flags", ['-m64'], converter = Split)
+#End modifications
+
+#opts.Add('LINKFLAGS', "Linker flags", ['-s'], converter = Split)
 opts.Add('LIBS', 'custom libraries needed for build', [], converter = Split)
 
 opts.Add('PREFIX', 'installation prefix directory', '/usr/local')
@@ -348,7 +355,7 @@
 if not env.GetOption('clean'):
     conf = Configure(env)
     if conf.CheckCHeader("gd.h") and conf.CheckLib("gd"):
-        env.Append(LIBS=["gd"])
+        env.Append(LIBS=["gd", "png12", "z"])
         env.Append(CPPDEFINES=["HAVE_GD"])
 
     if env['FORCE_HASH_MAP']:
@@ -401,7 +408,7 @@
                 print "Tutorial will not be installed"
     external_m4ri = conf.CheckLib('m4ri')
     if conf.CheckCHeader("gd.h") and conf.CheckLib("gd"):
-        env.Append(LIBS=["gd"])
+        env.Append(LIBS=["gd", "png12", "z"])
         env.Append(CPPDEFINES=["HAVE_GD"])
     if external_m4ri:
        env['LIBS'] += ['m4ri']
@@ -530,8 +537,11 @@
 slib = env.SharedLibrary
 if env['SHLIBVERSIONING']:
     slib = VersionatedSharedLibrary
-#if env['PLATFORM']=="darwin":
-#    slib=env.LoadableModule
+# since "slib = VersionatedSharedLibrary" is broken on OSX 10.4 we use the 
+# following. We are currently not using shared libraries anyway due to
+# bugs in the deallocation of the various PolyBoRi libraries
+if env['PLATFORM']=="darwin":
+    slib=env.LoadableModule
 
 
 libCuddShared = slib(CuddPath(cudd_name), list(shared_resources))
@@ -1248,6 +1258,11 @@
     env.AlwaysBuild(ipboribin)   
     env.Alias('install', ipboribin)
 
+    # we dump the flags for reuse by Sage
+    if not path.exists(InstPath()):
+        Execute(Mkdir(InstPath())) 
+    opts.Save(InstPath("flags.conf"), env)
+
 env.Alias('prepare-devel', devellibs + readabledevellibs)
 env.Alias('prepare-install', [pyroot, DocPath()])
 
