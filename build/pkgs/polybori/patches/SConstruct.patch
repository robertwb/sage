--- src/polybori-0.7/SConstruct	2011-02-15 23:01:45.000000000 +0000
+++ patches/SConstruct	2011-02-18 10:51:47.892324003 +0000
@@ -167,6 +167,13 @@
              defaultenv[flag], converter = Split)
     else:
         print "Flags", flag, "not in default environment!"        
+
+#The following linker flags causes the build to fail on OSX 10.4, but works on 10.5
+# opts.Add('LINKFLAGS', "Linker flags", ['-s'], converter = Split)
+# Instead we add "-m64" in case we build on multiarch in  64 bit mode (OSX now, Solaris later)
+if os.environ['SAGE64'] == "yes":
+         opts.Add('LINKFLAGS', "Linker flags", ['-m64'], converter = Split)
+#End modifications
     
 opts.Add('LINKFLAGS', "Linker flags", defaultenv['LINKFLAGS'])# + ['-s'])
 opts.Add('LIBS', 'custom libraries needed for build', [], converter = Split)
@@ -351,7 +358,7 @@
 if not env.GetOption('clean'):
     conf = Configure(env)
     if conf.CheckCHeader("gd.h") and conf.CheckLib("gd"):
-        env.Append(LIBS=["gd"])
+        env.Append(LIBS=["gd","png12","z"])
         env.Append(CPPDEFINES=["HAVE_GD"])
 
     if env['FORCE_HASH_MAP']:
@@ -415,7 +422,7 @@
                 print "Tutorial will not be installed"
     external_m4ri = conf.CheckLib('m4ri')
     if conf.CheckCHeader("gd.h") and conf.CheckLib("gd"):
-        env.Append(LIBS=["gd"])
+        env.Append(LIBS=["gd","png12","z"])
         env.Append(CPPDEFINES=["HAVE_GD"])
     if external_m4ri:
        env['LIBS'] += ['m4ri']
@@ -423,7 +430,7 @@
        env['CPPPATH'] += ['M4RI']
 
        # generate M4RI/m4ri, to allow canonical #include <m4ri/m4ri.h>
-       if not path.exists(m4ri_inc):
+       if not (external_m4ri) and not (path.exists(m4ri_inc)):
            print "Symlinking to", m4ri_inc, "..."
            os.symlink('.', m4ri_inc)
 
@@ -544,9 +551,11 @@
 slib = env.SharedLibrary
 if env['SHLIBVERSIONING']:
     slib = VersionatedSharedLibrary
-#if env['PLATFORM']=="darwin":
-#    slib=env.LoadableModule
-
+# since "slib = VersionatedSharedLibrary" is broken on OSX 10.4 we use the 
+# following. We are currently not using shared libraries anyway due to
+# bugs in the deallocation of the various PolyBoRi libraries
+if env['PLATFORM']=="darwin":
+    slib=env.LoadableModule
 
 libCuddShared = slib(CuddPath(cudd_name), list(shared_resources))
 
@@ -1314,6 +1323,11 @@
     env.Alias('install', ipboribin)
     env.AlwaysBuild(guibin)   
     env.Alias('install', guibin)
+
+    # we dump the flags for reuse by Sage
+    if not path.exists(InstPath()):
+        Execute(Mkdir(InstPath())) 
+    opts.Save(InstPath("flags.conf"), env)
     
 env.Alias('prepare-devel', devellibs + readabledevellibs)
 env.Alias('prepare-install', [pyroot, DocPath()])
