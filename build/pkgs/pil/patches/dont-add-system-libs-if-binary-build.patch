diff -Nur src/setup.py src-dont-add-system-libs-if-binary-build/setup.py
--- src/setup.py	2006-12-03 12:37:29.000000000 +0100
+++ src-dont-add-system-libs-if-binary-build/setup.py	2010-12-01 02:47:11.000000000 +0100
@@ -34,11 +34,20 @@
 #
 # TIFF_ROOT = libinclude("/opt/tiff")
 
-FREETYPE_ROOT = None
-JPEG_ROOT = None
-TIFF_ROOT = None
-ZLIB_ROOT = None
-TCL_ROOT = None
+SAGE_BINARY_BUILD = False
+if 'SAGE_BINARY_BUILD' in os.environ and os.environ['SAGE_BINARY_BUILD'] == 'yes':
+    SAGE_BINARY_BUILD = True
+
+if SAGE_BINARY_BUILD:
+    print("Installing in binary build mode.")
+    FREETYPE_ROOT = JPEG_ROOT = TIFF_ROOT = ZLIB_ROOT = TCL_ROOT = \
+        libinclude(os.environ['SAGE_LOCAL'])
+else:
+    FREETYPE_ROOT = None
+    JPEG_ROOT = None
+    TIFF_ROOT = None
+    ZLIB_ROOT = None
+    TCL_ROOT = None
 
 # FIXME: add mechanism to explicitly *disable* the use of a library
 
@@ -90,6 +99,11 @@
 except ImportError:
     _tkinter = None
 
+if 'SAGE_PIL_NOTK' in os.environ and os.environ['SAGE_PIL_NOTK'] == 'yes':
+    print("Disabling TK in PIL build.")
+    # Force None, so don't build tk -- this helps on some platforms.
+    _tkinter = None
+
 def add_directory(path, dir, where=None):
     if dir and os.path.isdir(dir) and dir not in path:
         if where is None:
@@ -120,62 +134,64 @@
 
         add_directory(include_dirs, "libImaging")
 
-        #
-        # add platform directories
-
-        if sys.platform == "cygwin":
-            # pythonX.Y.dll.a is in the /usr/lib/pythonX.Y/config directory
-            add_directory(library_dirs, os.path.join(
-                "/usr/lib", "python%s" % sys.version[:3], "config"
-                ))
-
-        elif sys.platform == "darwin":
-            # attempt to make sure we pick freetype2 over other versions
-            add_directory(include_dirs, "/sw/include/freetype2")
-            add_directory(include_dirs, "/sw/lib/freetype2/include")
-            # fink installation directories
-            add_directory(library_dirs, "/sw/lib")
-            add_directory(include_dirs, "/sw/include")
-            # darwin ports installation directories
-            add_directory(library_dirs, "/opt/local/lib")
-            add_directory(include_dirs, "/opt/local/include")
-
-        add_directory(library_dirs, "/usr/local/lib")
-        # FIXME: check /opt/stuff directories here?
-
-        prefix = sysconfig.get_config_var("prefix")
-        if prefix:
-            add_directory(library_dirs, os.path.join(prefix, "lib"))
-            add_directory(include_dirs, os.path.join(prefix, "include"))
-
-        #
-        # locate tkinter libraries
-
-        if _tkinter:
-            TCL_VERSION = _tkinter.TCL_VERSION[:3]
-
-        if _tkinter and not TCL_ROOT:
-            # we have Tkinter but the TCL_ROOT variable was not set;
-            # try to locate appropriate Tcl/Tk libraries
-            PYVERSION = sys.version[0] + sys.version[2]
-            TCLVERSION = TCL_VERSION[0] + TCL_VERSION[2]
-            roots = [
-                # common installation directories, mostly for Windows
-                # (for Unix-style platforms, we'll check in well-known
-                # locations later)
-                os.path.join("/py" + PYVERSION, "Tcl"),
-                os.path.join("/python" + PYVERSION, "Tcl"),
-                "/Tcl", "/Tcl" + TCLVERSION, "/Tcl" + TCL_VERSION,
-                os.path.join(os.environ.get("ProgramFiles", ""), "Tcl"),
-                ]
-            for TCL_ROOT in roots:
-                TCL_ROOT = os.path.abspath(TCL_ROOT)
-                if os.path.isfile(os.path.join(TCL_ROOT, "include", "tk.h")):
-                    # FIXME: use distutils logging (?)
-                    print "--- using Tcl/Tk libraries at", TCL_ROOT
-                    print "--- using Tcl/Tk version", TCL_VERSION
-                    TCL_ROOT = libinclude(TCL_ROOT)
-                    break
+        if not SAGE_BINARY_BUILD:
+            #
+            # add platform directories
+
+            if sys.platform == "cygwin":
+                # pythonX.Y.dll.a is in the /usr/lib/pythonX.Y/config directory
+                add_directory(library_dirs, os.path.join(
+                        "/usr/lib", "python%s" % sys.version[:3], "config"
+                        ))
+
+            elif sys.platform == "darwin":
+                # attempt to make sure we pick freetype2 over other versions
+                add_directory(include_dirs, "/sw/include/freetype2")
+                add_directory(include_dirs, "/sw/lib/freetype2/include")
+                # fink installation directories
+                add_directory(library_dirs, "/sw/lib")
+                add_directory(include_dirs, "/sw/include")
+                # darwin ports installation directories
+                add_directory(library_dirs, "/opt/local/lib")
+                add_directory(include_dirs, "/opt/local/include")
+
+# Commented out to ensure SAGE_LOCAL/lib comes before /usr/local/lib (#9864):
+#            add_directory(library_dirs, "/usr/local/lib")
+            # FIXME: check /opt/stuff directories here?
+
+            prefix = sysconfig.get_config_var("prefix")
+            if prefix:
+                add_directory(library_dirs, os.path.join(prefix, "lib"))
+                add_directory(include_dirs, os.path.join(prefix, "include"))
+
+            #
+            # locate tkinter libraries
+
+            if _tkinter:
+                TCL_VERSION = _tkinter.TCL_VERSION[:3]
+
+            if _tkinter and not TCL_ROOT:
+                # we have Tkinter but the TCL_ROOT variable was not set;
+                # try to locate appropriate Tcl/Tk libraries
+                PYVERSION = sys.version[0] + sys.version[2]
+                TCLVERSION = TCL_VERSION[0] + TCL_VERSION[2]
+                roots = [
+                    # common installation directories, mostly for Windows
+                    # (for Unix-style platforms, we'll check in well-known
+                    # locations later)
+                    os.path.join("/py" + PYVERSION, "Tcl"),
+                    os.path.join("/python" + PYVERSION, "Tcl"),
+                    "/Tcl", "/Tcl" + TCLVERSION, "/Tcl" + TCL_VERSION,
+                    os.path.join(os.environ.get("ProgramFiles", ""), "Tcl"),
+                    ]
+                for TCL_ROOT in roots:
+                    TCL_ROOT = os.path.abspath(TCL_ROOT)
+                    if os.path.isfile(os.path.join(TCL_ROOT, "include", "tk.h")):
+                        # FIXME: use distutils logging (?)
+                        print "--- using Tcl/Tk libraries at", TCL_ROOT
+                        print "--- using Tcl/Tk version", TCL_VERSION
+                        TCL_ROOT = libinclude(TCL_ROOT)
+                        break
             else:
                 TCL_ROOT = None
 
@@ -193,11 +209,12 @@
         #
         # add standard directories
 
-        add_directory(library_dirs, "/usr/local/lib")
-        add_directory(include_dirs, "/usr/local/include")
+        if not SAGE_BINARY_BUILD:
+            add_directory(library_dirs, "/usr/local/lib")
+            add_directory(include_dirs, "/usr/local/include")
 
-        add_directory(library_dirs, "/usr/lib")
-        add_directory(include_dirs, "/usr/include")
+            add_directory(library_dirs, "/usr/lib")
+            add_directory(include_dirs, "/usr/include")
 
         #
         # insert new dirs *before* default libs, to avoid conflicts
