#!/usr/bin/env bash
###########################################
## PARI
###########################################

if [ -z "$SAGE_LOCAL" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

TOP=`pwd`
PATCHED="$TOP/patches/files"

###########################################################
## patching src files.  See patches/README.txt for details
###########################################################

cd src

# These two are needed so that Sage can catch pari's error signals.
cp "$PATCHED/init.c"  src/language/init.c
cp "$PATCHED/mp.c"    src/kernel/gmp/mp.c

# Fix for PARI bug 1079 (jdemeyer: temporary until this is fixed upstream)
cp "$PATCHED/base2.c" "$PATCHED/polarit3.c" src/basemath/


cp "$PATCHED/get_dlld" config/

# cwitty: disable -rpath
cp "$PATCHED/get_ld" config/

# cwitty: disable TeX; allow bz2 compression
cp "$PATCHED/gphelp.in" doc/

# John Cremona: copy over a lightly patched get_tests, so that make
# test-all does not test ellglobalred (which requires the elldata
# package Sage does not install).
cp "$PATCHED/get_tests" config/get_tests


# This is needed or there are weird locale problems involving rpath
# with building Sage.
LC_ALL=C
export LC_ALL
LANG=C
export LANG

build()
{
    #  add the proper flags for 64-bit build mode on OS X and Open Solaris x64
    # Setting CFLAGS is not sufficient on Solaris since Pari 2.4.3, as this
    # flag is not being used when the check for GMP and Readline are made
    # so the checks for them fail.  One must redefine CC and export that.

    # Let the user chose a flag other than -m64 for 64-bit builds
    # if needed.
    if [ -z "$CFLAG64" ] ; then
       CFLAG64=-m64
    fi

    if [ "x$SAGE64" = xyes ]; then
	CFLAGS="$CFLAGS $CFLAG64"
        CC="$CC $CFLAG64" && export CC
    fi

    if [ "x$SAGE_DEBUG" = xyes ] ; then
       CFLAGS="$CFLAGS -O0 -g" # No optimisation. Good for debugging or working around compiler bugs.
    else
       CFLAGS="$CFLAGS -O3 -g" # Default optimisation.
    fi
    export CFLAGS

    CUR=`pwd`

    # On my systems PARI does *not* build correctly with these set! (and
    # they are set by sage-env).  It builds, but doesn't run.  Something
    # about missing _start symbol.
    unset LD
    unset AR
    unset AS

    if [ "$PARI_EXTRA_OPTS" = "" ]; then
        PARI_EXTRA_OPTS=" --graphic=none "
    fi

    # Allow the user to tune Pari - this is time-consuming, but some may want to do it.
    if [ "x$SAGE_TUNE_pari" = xyes ] ; then
       echo "Pari will be tuned for your system since you set SAGE_TUNE_pari=\"yes\". This can be slow"
       ./Configure $PARI_EXTRA_OPTS --prefix=$SAGE_LOCAL --with-readline=$SAGE_LOCAL --with-gmp=$SAGE_LOCAL --kernel=gmp --graphic=none --tune
    else
       echo "To sage build time, Pari will not be tuned for your systems"
       echo "If you want higher performance, at the expense of a slower build"
       echo "set the environment variable SAGE_TUNE_pari=yes by typing the following"
       echo "before building Sage (or at least before building Pari)"
       echo "SAGE_TUNE_pari=yes"
       echo "export SAGE_TUNE_pari"
       ./Configure $PARI_EXTRA_OPTS --prefix=$SAGE_LOCAL --with-readline=$SAGE_LOCAL --with-gmp=$SAGE_LOCAL --kernel=gmp --graphic=none
    fi

    if [ $? -ne 0 ]; then
        echo "ERROR - configure PARI with readline and gmp failed."
        exit 1
    fi

    if [ ! -f Makefile ]; then
        echo "Unable to configure PARI."
        exit 1
    fi

    echo "Building and install PARI"
    if [ "$UNAME" = "CYGWIN" ]; then
        # There are weird bugs in PARI's build process on Windows XP
        # under Cygwin.
        # Passing in this extra flag gets around the bug.
        $MAKE GMPINCLUDE=-I$SAGE_LOCAL/include EXTRADLLDFLAGS=-lgmp gp
    else
        $MAKE gp
    fi

    if [ $? -ne 0 ]; then
        echo "Error building GP"
        exit 1
    fi

    cp -f gp "$SAGE_LOCAL/bin/"    # avoid "make install"

    # Install documentation source (compressed), for use by gphelp.
    mkdir -p "$SAGE_LOCAL/share/pari/doc/"
    cp -f doc/usersch*.tex "$SAGE_LOCAL/share/pari/doc/"
    bzip2 -9 -f "$SAGE_LOCAL/share/pari/doc/"usersch*.tex
    cp -f doc/translations "$SAGE_LOCAL/share/pari/doc/"

    # And install gphelp.
    cp -f doc/gphelp "$SAGE_LOCAL/bin/"

    $MAKE install-lib-sta

    if [ $? -ne 0 ]; then
        echo "Error installing PARI static library"
        exit 1
    fi

    # Instead of "make install" we do the following, to avoid building
    # the PARI documentation (which requires latex; or more precisely,
    # *hangs* under a default cygwin with latex, since some fonts are missing).
    cd `config/objdir`
    $MAKE install-include

    if [ $? -ne 0 ]; then
        echo "Error installing PARI include files"
        exit 1
    fi

    cp -f libpari* $SAGE_LOCAL/lib/
    cd "$CUR"

    # On CYGWIN, need the dll for PARI to be in the same
    # directory as the gp binary, or it doesn't find it.
    # Note that just using a symlink doesn't work.
    if [ $UNAME = "CYGWIN" ]; then
        CUR="`pwd`"
        cd "$SAGE_LOCAL"/bin/
        cp -f "$SAGE_LOCAL"/lib/*pari*.dll .
        cd "$CUR"
    fi

    # The following is a hack to get the library installed correctly
    # on OS X.
    if [ $UNAME = "Darwin" ]; then
        echo "MAC OS X hack -- delete and reinstall libpari.a"
        rm -f Odarwin-ppc/*lib*
        $MAKE install-lib-sta

        if [ $? -ne 0 ]; then
            echo "Error Re-installing PARI static libraries (OS X trick)"
            exit 1
        fi

        cd `config/objdir`
        cp -f libpari* "$SAGE_LOCAL"/lib
        cd "$CUR"

        # Also another patch since paripriv.h won't compile right on OS X
        # when used by client Sage code.  So we replace it by a slightly
        # modified version.
        cp -pf "$PATCHED/paripriv.h" "$SAGE_LOCAL/include/pari/paripriv.h"
    fi
    # Like on OS X (see above), the Sage library would not build
    # without some changes. Though on Solaris the changes are much simpler than
    # on OS X.
    if [ `uname` = "SunOS" ]; then
       set -e
       echo "Patching include/pari/paripriv.h so it works on Solaris"
       echo "The changes are much smaller than needed on OS X"
       cp  "$PATCHED/paripriv.h" $SAGE_LOCAL/include/pari/paripriv.h
       set +e
    elif [ "$UNAME" = "CYGWIN" ]; then
       # We need to the same thing on Cygwin that we have to do on Solaris
       cp  "$PATCHED/paripriv.h" $SAGE_LOCAL/include/pari/paripriv.h
    fi

    echo "Installing extra Galois groups data."
    make install-data
    if [ $? -ne 0 ]; then
        echo "Error installing extra galois groups data."
        exit 1
    fi
}

build

if [ $? -ne 0 ]; then
    echo "Error building PARI."
    exit 1
fi

if [ $UNAME="Darwin" -a -f $SAGE_LOCAL/lib/libpari.dylib ]; then
    exit 0
fi

if [ -f $SAGE_LOCAL/lib/libpari.so ]; then
    exit 0
fi

if [ $? -ne 0 ]; then
    echo "Error building PARI."
    exit 1
fi
