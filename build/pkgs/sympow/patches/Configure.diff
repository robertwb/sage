--- src/Configure	2007-08-21 05:57:01.000000000 +0100
+++ patches/Configure	2010-08-22 00:33:18.001198818 +0100
@@ -1,23 +1,26 @@
 #! /bin/sh
+# Despite making some small changes to this rather strange shell script
+# I did not write 99% of it. David Kirkby, 21st August 2010. 
 
 if [ "$1" != "" ]; then
   echo "**ERROR**: Configure does not take any options for SYMPOW"; exit 1;
 fi
 
 whichexe() {
-    if [ -f /bin/$1 ]; then
-        echo /bin/$1
-        return;
-    fi;
-    if [ -f /usr/bin/$1 ]; then
-        echo /usr/bin/$1
-        return;
-    fi;
-    if [ -f /usr/local/bin/$1 ]; then
-        echo /usr/local/bin/$1
-        return;
-    fi;
-    echo `which $1`
+#    if [ -f /bin/$1 ]; then
+#        echo /bin/$1
+#        return;
+#    fi;
+#    if [ -f /usr/bin/$1 ]; then
+#        echo /usr/bin/$1
+#        return;
+#    fi;
+#    if [ -f /usr/local/bin/$1 ]; then
+#        echo /usr/local/bin/$1
+#        return;
+#    fi;
+#    echo `which $1`
+    echo $1
 }
 
 FILE="Makefile.new"
@@ -70,13 +73,6 @@
   echo "SH = $SH"
 fi
 
-CC=`whichexe cc` && echo "CC = $CC" >> $FILE
-if [ -z "$CC" ]; then
-  echo "**ERROR**: Could not find cc"; exit 1;
-else
-  echo "CC = $CC"
-fi
-
 UNAME=`whichexe uname`
 if [ -z "$UNAME" ];then
   echo "**ERROR**: Could not find uname"; exit 1;
@@ -84,18 +80,39 @@
   echo "UNAME = $UNAME"
 fi
 
-MACH=`"$UNAME" -m`
-for x in ix86 i386 i486 i586 i686 x86_64 ia64 
+echo "CC=$CC" >> $FILE
+
+# We need to set the prcision of the FPU to double precision
+# (53 bit mantissa, 64-bits total) and not the default 
+# extended precision (64-bits mantissa, 80 bits total). 
+# on Intel and AMD CPUs based on the x86 architecture. 
+ 
+# It appears that on OS X, this is not necessary, since
+# the default is to use the faster but less accurate SSE
+# instructions. But it is necessary to do this on Linux, 
+# Cygwin, Solaris and probably other systems which use
+# x86 type processors. 
+
+for machine_hardware in ix86 i386 i486 i586 i686 x86_64 i86pc ia64 
 do
-  if [ "$MACH" = "$x" -a `uname` = "Linux" ]; then
-     echo "You appear to have a $x based Linux system --- using fpu.c"
+  if [ "x`uname -m`" = "x$machine_hardware" ] && [ "x`uname`" != xDarwin ] ; then
+     echo "You appear to have a x86 based system. The Quad Double"
+     echo "program used by SYMPOW assumes IEEE-754 double precision numbers"
+     echo "with 53-bits in in the mantissa and 64-bits in total."
+     echo ""
+     echo "However, the default mode of operating of the the FPU"
+     echo "in the x86 chips (first introduced in the 8087)"
+     echo "is to use extended precision, with 64-bits in the mantissa"
+     echo "and 80 bits in total. This has to be disabled"
+     echo "SYMPOW will add code to set the CPU's control word"
+     echo "to disable this extended precision. This is critical"
+     echo "and was the cause of several annoying Sage bugs - see"
+     echo "http://trac.sagemath.org/sage_trac/ticket/9703 (Solaris x86)"
+     echo "http://trac.sagemath.org/sage_trac/ticket/9734 (Solaris x86)"
+     echo "http://trac.sagemath.org/sage_trac/ticket/9166 (Cygwin)"
      DEFS="-Dx86"
   fi
 done
-if [ -z "$DEFS" ]; then
-  echo "You do not appear to have an x86 based system --- not using fpu.c"
-fi
-
 echo "DEFS = $DEFS" >> $FILE
 
 OPT="-O3" && echo "OPT = $OPT" >> $FILE
