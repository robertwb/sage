#!/usr/bin/env bash

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

# Let the environment variable CFLAG64 specify the compiler flag
# to build 64-bit code. It it is not set, set it to -m64
if [ -z $CFLAG64 ] ; then
   CFLAG64=-m64
fi

# If SAGE64 is "yes", build 64-bit.
if [ "x$SAGE64" = xyes ] ; then
   echo "Building Sympow 64-bit"
   CFLAGS="$CFLAGS $CFLAG64"
   LDFLAGS="$LDFLAGS $CFLAG64"
   export CFLAGS
   export LDFLAGS
fi

# Workaround problems with gcc 4.6.0 on ia64 systems:
if [ "x`uname -m`" = "xia64" ] && [ "x`$SAGE_LOCAL/bin/testcc.sh $CC`" = xGCC ] ; then
    if $CC -dumpversion 2>/dev/null |grep >/dev/null '^4\.6\.' ; then
        echo "Detected GCC version `$CC -dumpversion` on Itanium. Adding"
	echo "work-around to fix a bug when sympow is compiled with gcc 4.6.0"
        CFLAGS="$CFLAGS -fno-expensive-optimizations"
        export CFLAGS
    fi
fi


# Add some code to disable the extended precision of Intel
# x86 based floating point processors. The code in SYMPOW
# already works for Linux, so there's no need to do that.

# For now this is only done on Cygwin and Solaris, as its needed
# on Solaris x86. (It's ignored on SPARC, so there's no need to be specific
# about it). It might potentially need to be enabled on other systems such
# as FreeBSD, NetBSD, OpenBSD or anything else that uses an x86 processor.

if [ "x$UNAME"  = xSunOS ] || [ "x$UNAME"  = xCYGWIN ] ; then
   cp patches/fpu.c src/
fi

cp patches/Configure src/

cd src/

./Configure

if [ $? -ne 0 ]; then
   echo "Error configuring sympow"
   exit 1
fi

make

if [ $? -ne 0 ]; then
   echo "Error building sympow"
   exit 1
fi

if [ ! -f sympow ]; then
   echo "sympow executable missing"
   exit 1
fi

TARGET="$SAGE_LOCAL/lib/sympow"

if [ -d "$TARGET" ]; then
    rm -rf "$TARGET"
fi
mkdir "$TARGET"

mv datafiles "$TARGET/"

if [ ! -d "$TARGET/datafiles" ]; then
   echo "Error installing sympow datafiles."
   exit 1
fi

cp sympow *.gp new_data "$TARGET/"

if [ ! -f "$TARGET/sympow" ]; then
   echo "sympow executable didn't copy correctly"
   exit 1
fi

SCRIPT="$SAGE_LOCAL/bin/sympow"

echo "#!/bin/sh" > $SCRIPT
echo "cd \$SAGE_LOCAL/lib/sympow" >> $SCRIPT
echo "./sympow \$*" >> $SCRIPT
chmod +x $SCRIPT

exit 0
