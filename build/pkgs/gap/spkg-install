#!/usr/bin/env bash

###########################################
## GAP
###########################################

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

if [ "x`uname`" = xSunOS ] ; then
  echo "Warning, CC and CXX are not being unset, which may be unwise"
else
  echo "*WARNING*: Unsetting CC since that tends to break GAP building"
  unset CC
  echo "*WARNING*: Unsetting CXX since that tends to break GAP building"
  unset CXX
fi

TARGET="gap-4.4.12"  #NOTE: Be sure to also update patches/gap*

if [ "x$SAGE64" = xyes ] && [ "x$UNAME" = xSunOS ] ; then
  CFLAGS=-m64
  CXXFLAGS=-m64
  echo "Now setting them again on Solaris, as otherwise there is no way to get a 64-bit build"
  export CFLAGS
  export CXXFLAGS
fi


# Indicate that Gap has somehow been updated, which invalidates all workspaces.
touch "$SAGE_LOCAL/bin/gap_stamp"


# Apply patches
cp patches/gap.c patches/saveload.c patches/streams.c src/src/
cp patches/sysfiles.h patches/sysfiles.c src/src/

build()
{
    CUR=`pwd`
    INSTALL_DIR=$SAGE_LOCAL/lib/$TARGET
    rm -rf $INSTALL_DIR
    if [ $? -ne 0 ]; then
        echo "Couldn't remove old dir."
        exit 1
    fi

    cd src
    # Since there are warnings about setting CFLAGS, the following is only down
    # on 64-bit Solaris. I don't want to screw things up for anyone else
    # on OS X for example.
    if [ "x`uname`" = xSunOS ] && [ "x$SAGE64" = xyes ] ; then
       echo "64-bit Solaris or OpenSolaris build"
       ./configure --prefix=$SAGE_LOCAL PREFIX="$SAGE_LOCAL" CC="$CC -m64" CXX="$CXX -m64"
    else
       ./configure --prefix=$SAGE_LOCAL PREFIX="$SAGE_LOCAL" CC="$CC" CXX="$CXX"
    fi

    if [ $? -ne 0 ]; then
        echo "Configuration of GAP failed."
        exit 1
    fi

    # On a Windows machine the gap build creates a file "gap.exe",
    # but no file named "gap".  This breaks the build, since it
    # then tries to strip gap, but can't since the file is missing!
    if [ $UNAME = "CYGWIN" ]; then
        mkdir bin
        mkdir bin/i686-pc-cygwin-gcc
        cd bin/i686-pc-cygwin-gcc
        touch gap.exe
        ln -s gap.exe gap
        cd ../..
    fi

    echo "Building and installing $TARGET"
    $MAKE
    if [ $? -ne 0 ]; then
        echo "Error building gap."
        exit 1
    fi

    mkdir $INSTALL_DIR
    cp -r * $INSTALL_DIR

    cd "$SAGE_LOCAL/bin"
    rm -f gap
    if [ ! -f $SAGE_LOCAL/lib/$TARGET/bin/gap.sh ]; then
       echo "Error building GAP."
       exit 1
    fi
    ln -sf "../lib/$TARGET/bin/gap.sh" gap

    cd $CUR
    if [ $UNAME = "CYGWIN" ]; then
        cp patches/gap_cygwin "$SAGE_LOCAL"/bin/gap
    else
        cp patches/gap "$SAGE_LOCAL"/bin/gap
    fi

    if [ $? -ne 0 ]; then
        echo "Error copying customized gap startup script."
        exit 1
    fi

    # Build and install docs if requested
    if [ "x$SAGE_SPKG_INSTALL_DOCS" = xyes ] ; then
	if [ $? -ne 0 ]; then
	    echo "Error building gap docs."
	    exit 1
	fi
	mkdir -p $SAGE_ROOT/local/share/doc/gap
	cp -r src/doc/htm $SAGE_ROOT/local/share/doc/gap/html
    fi
}

build

if [ $? -eq 0 ]; then
    # Delete the old version if it is still there.
    rm -rf "$SAGE_LOCAL"/lib/gap-4.4.10
    exit 0
else
    echo "Something went wrong when building GAP."
    exit 1
fi
