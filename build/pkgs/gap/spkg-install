#!/usr/bin/env bash

###########################################
## GAP
###########################################

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

echo "*WARNING*: Unsetting CC since that tends to break GAP building"
unset CC
echo "*WARNING*: Unsetting CXX since that tends to break GAP building"
unset CXX
echo "IMPORTANT: We should work out why this breaks GAP, as it is will"
echo "IMPORTANT: prevent a build with some other compiler. We should"
echo "IMPORTANT: be able to specify the compiler"

TARGET="gap-4.4.10"  #NOTE: Be sure to also update patches/gap*

# Indicate that Gap has somehow been updated, which invalidates all workspaces.
touch "$SAGE_LOCAL/bin/gap_stamp"

# If we're on an Itanium Linux box, we overwite configure.out with a slightly
# modified version.  The modified version has all -O2's replaced by -O0.
# See http://www.gap-system.org/Faq/Hardware-OS/hardware-os8.html
# On the San Diego Super computer `uname -p` is unknown, but
# uname -a includes ia64 in the output.  So this is a better
# detection method.
# Note that GAP was "fixed" to work fine on Itanium without this -O0 hack, but with
# GCC-4.4.0, GAP mysterious stopped working again.  So we revert to using -O0.
if [ `uname` = "Linux" ]; then
   uname -a |grep ia64
   if [ $? = 0 -o `uname -p` = "ia64" ]; then
       cp patches/configure.out-ia64 src/cnf/configure.out
       echo "The file configure.out was patched for SAGE!" > src/cnf/configure.out.README
   fi
fi


build()
{
    CUR=`pwd`
    INSTALL_DIR=$SAGE_LOCAL/lib/$TARGET
    rm -rf "$SAGE_LOCAL"/lib/gap-4.4.*
    if [ $? -ne 0 ]; then
        echo "Couldn't remove old dir."
        exit 1
    fi

    cd src
    ./configure --prefix=$SAGE_LOCAL PREFIX="$SAGE_LOCAL" CC="$CC" CXX="$CXX"

    if [ $? -ne 0 ]; then
        echo "Configuration of GAP failed."
        exit 1
    fi

    # On a Windows machine the gap build creates a file "gap.exe",
    # but no file named "gap".  This breaks the build, since it
    # then tries to strip gap, but can't since the file is missing!
    if [ $UNAME = "CYGWIN" ]; then
        mkdir bin
        mkdir bin/i686-pc-cygwin-gcc
        cd bin/i686-pc-cygwin-gcc
        touch gap.exe
        ln -s gap.exe gap
        cd ../..
    fi

    echo "Building and installing $TARGET"
    $MAKE
    if [ $? -ne 0 ]; then
        echo "Error building gap."
        exit 1
    fi

    mkdir $INSTALL_DIR
    cp -r * $INSTALL_DIR

    # building CJ's + Leon's code
    cd pkg/guava3.4
    ./configure ../../ --enable-libsuffix=64
    if [ $? -ne 0 ]; then
       echo "Error configuring Guava"
       exit 1
    fi
    $MAKE
    if [ $? -ne 0 ]; then
        echo "Error building Guava"
        exit 1
    fi

    cp -r ./bin/* $INSTALL_DIR/pkg/guava3.4/bin

    cd "$SAGE_LOCAL/bin"
    rm -f gap
    if [ ! -f $SAGE_LOCAL/lib/$TARGET/bin/gap.sh ]; then
       echo "Error building GAP."
       exit 1
    fi
    ln -sf "../lib/$TARGET/bin/gap.sh" gap

    cd $CUR
    if [ $UNAME = "CYGWIN" ]; then
        cp patches/gap_cygwin "$SAGE_LOCAL"/bin/gap
    else
        cp patches/gap "$SAGE_LOCAL"/bin/gap
    fi

    if [ $? -ne 0 ]; then
        echo "Error copying customized gap startup script."
        exit 1
    fi
}

build
