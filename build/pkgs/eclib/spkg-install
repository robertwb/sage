#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
    echo "SAGE_LOCAL undefined - exiting..."
    echo "Maybe run 'sage -sh'?"
    exit 1
fi

CUR=`pwd`

echo "Deleting old versions of eclib libraries, which"
echo "would interfere with new builds."
cd "$SAGE_LOCAL"/lib/
# delete any pre-autotools libraries:
rm libcurvesntl.* libg0nntl.* libjcntl.* librankntl.* libmwrank.*
# delete autotools libraries:
rm libjc.*
echo "Deleting old include directory"
cd "$SAGE_LOCAL"/include
rm -rf eclib

cd "$CUR"/src

# if [ "$UNAME" = "CYGWIN" ]; then
#     PICFLAG=""
# else
#     PICFLAG=-fPIC
# fi
# if [ "$SAGE64" = "yes" ]; then
#     DYN_FLAGS="-m64"; export DYN_FLAGS
#     PICFLAG="-m64 -fPIC"
# fi
# export PICFLAG

./configure --prefix=$SAGE_LOCAL --with-ntl=$SAGE_LOCAL --with-pari=$SAGE_LOCAL --with-gmp=$SAGE_LOCAL --disable-allprogs

$MAKE

if [ $? -ne 0 ]; then
    echo "Error building eclib"
    exit 1
fi

# Install libraries and headers by copying them over:

$MAKE install

# if [ "$UNAME" = "Darwin" ]; then
#     cp -p lib/*.dylib "$SAGE_LOCAL"/lib/
# elif [ "$UNAME" = "CYGWIN" ]; then
#     cp -p lib/*.dll "$SAGE_LOCAL"/lib/
# else
#     cp -p lib/*.so "$SAGE_LOCAL"/lib/
#     PATH="$PATH:/sbin" ldconfig -n $SAGE_LOCAL/lib
# fi

if [ $? -ne 0 ]; then
    echo "Error installing eclib"
    exit 1
fi

# cd "$SAGE_LOCAL"/include
# chmod 755 eclib
# chmod 644 eclib/*
