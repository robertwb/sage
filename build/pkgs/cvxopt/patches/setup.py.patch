--- ../src/src/setup.py	2010-09-15 21:55:00.000000000 -0700
+++ setup.py	2010-11-03 21:58:00.000000000 -0700
@@ -1,18 +1,29 @@
 from distutils.core import setup, Extension
 from glob import glob
 
+import os
+SAGE_LIB = os.environ['SAGE_LOCAL']+'/lib'
+SAGE_INCLUDE = os.environ['SAGE_LOCAL']+'/include'
+
 # directory containing libblas and liblapack
-ATLAS_LIB_DIR = '/usr/lib'
+ATLAS_LIB_DIR = SAGE_LIB
+
+if os.uname()[0]=="Darwin":
+    libraries = ['m','lapack','gsl','gslcblas','blas','cblas','atlas']
+elif os.environ['UNAME'] == 'CYGWIN':
+    libraries = ['lapack','gsl', 'blas', 'gfortran']    
+else:
+    libraries = ['m','lapack','gsl','gslcblas','blas','cblas','gfortran','atlas']
 
 # Set to 1 if you are using the random number generators in the GNU
 # Scientific Library.
-BUILD_GSL = 0
+BUILD_GSL = 1
 
 # Directory containing libgsl (used only when BUILD_GSL = 1).
-GSL_LIB_DIR = '/usr/lib'       
+GSL_LIB_DIR = SAGE_LIB 
 
 # Directory containing the GSL header files (used only when BUILD_GSL = 1).
-GSL_INC_DIR = '/usr/include/gsl'  
+GSL_INC_DIR = SAGE_INCLUDE
 
 # Set to 1 if you are installing the fftw module.
 BUILD_FFTW = 0
@@ -24,29 +35,31 @@
 FFTW_INC_DIR = '/usr/include'  
 
 # Set to 1 if you are installing the glpk module.
-BUILD_GLPK = 0
+# (can only do this if glpk (optional at this moment)
+# package in installed 
+BUILD_GLPK = 1
 
 # Directory containing libglpk (used only when BUILD_GLPK = 1).
-GLPK_LIB_DIR = '/usr/lib'       
+GLPK_LIB_DIR = SAGE_LIB 
 
 # Directory containing glpk.h (used only when BUILD_GLPK = 1).
-GLPK_INC_DIR = '/usr/include'  
+GLPK_INC_DIR = SAGE_INCLUDE
 
 # Set to 1 if you are installing the DSDP module.
 BUILD_DSDP = 0
 
 # Directory containing libdsdp (used only when BUILD_DSDP = 1).
-DSDP_LIB_DIR = '/usr/lib'
+DSDP_LIB_DIR = '/usr/local/src/sage/dsdp/DSDP5.8/lib'
  
 # Directory containing dsdp5.h (used only when BUILD_DSDP = 1).
-DSDP_INC_DIR = '/usr/include'
+DSDP_INC_DIR = '/usr/local/src/sage/dsdp/DSDP5.8/include'
 
 extmods = []
 
 # optional modules
 
 if BUILD_GSL:
-    gsl = Extension('gsl', libraries = ['m', 'gsl', 'blas'],
+    gsl = Extension('gsl', libraries = libraries+['gsl'],
         include_dirs = [ GSL_INC_DIR ],
         library_dirs = [ GSL_LIB_DIR ],
         sources = ['C/gsl.c'] )
@@ -60,14 +73,14 @@
     extmods += [fftw];
 
 if BUILD_GLPK:
-    glpk = Extension('glpk', libraries = ['glpk'],
+    glpk = Extension('glpk', libraries = libraries+['glpk', 'gmp', 'z'],
         include_dirs = [ GLPK_INC_DIR ],
         library_dirs = [ GLPK_LIB_DIR ],
         sources = ['C/glpk.c'] )
     extmods += [glpk];
 
 if BUILD_DSDP:
-    dsdp = Extension('dsdp', libraries = ['dsdp', 'blas', 'lapack'],
+    dsdp = Extension('dsdp', libraries = libraries+['dsdp'],
         include_dirs = [ DSDP_INC_DIR ],
         library_dirs = [ DSDP_LIB_DIR, ATLAS_LIB_DIR ],
         sources = ['C/dsdp.c'] )
@@ -85,17 +98,17 @@
 else:    
     MACROS = []
 
-base = Extension('base', libraries = ['m','lapack','blas'],
+base = Extension('base', libraries = libraries,
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/base.c','C/dense.c','C/sparse.c']) 
 
-blas = Extension('blas', libraries = ['blas'],
+blas = Extension('blas', libraries = libraries,
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/blas.c'] )
 
-lapack = Extension('lapack', libraries = ['lapack','blas'],
+lapack = Extension('lapack', libraries = libraries,
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/lapack.c'] )
@@ -103,10 +116,10 @@
 umfpack = Extension('umfpack', 
     include_dirs = [ 'C/SuiteSparse/UMFPACK/Include',
         'C/SuiteSparse/AMD/Include', 'C/SuiteSparse/AMD/Source', 
-        'C/SuiteSparse/UFconfig' ],
+        'C/SuiteSparse/UFconfig', ],
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
-    libraries = [ 'blas', 'lapack'],
+    libraries = libraries,
     sources = [ 'C/umfpack.c',
         'C/SuiteSparse/UMFPACK/Source/umfpack_global.c',
         'C/SuiteSparse/UMFPACK/Source/umfpack_tictoc.c' ] +
@@ -118,10 +131,10 @@
 
 cholmod = Extension('cholmod',
     library_dirs = [ ATLAS_LIB_DIR ],
-    libraries = ['lapack', 'blas'],
+    libraries = libraries,
     include_dirs = [ 'C/SuiteSparse/CHOLMOD/Include', 
         'C/SuiteSparse/COLAMD', 'C/SuiteSparse/AMD/Include', 
-        'C/SuiteSparse/UFconfig', 'C/SuiteSparse/COLAMD/Include' ],
+        'C/SuiteSparse/UFconfig', 'C/SuiteSparse/COLAMD/Include',],
     define_macros = MACROS + [('NPARTITION', '1')],
     sources = [ 'C/cholmod.c' ] + 
         ['C/SuiteSparse/AMD/Source/' + s for s in ['amd_global.c',
@@ -135,16 +148,20 @@
 
 amd = Extension('amd', 
     include_dirs = [ 'C/SuiteSparse/AMD/Include', 
-        'C/SuiteSparse/UFconfig' ],
+        'C/SuiteSparse/UFconfig', ],
     define_macros = MACROS,
     sources = [ 'C/amd.c' ] + glob('C/SuiteSparse/AMD/Source/*.c') )
 
-misc_solvers = Extension('misc_solvers', libraries = ['lapack', 'blas'],
+misc_solvers = Extension('misc_solvers',
+    libraries = libraries, 
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/misc_solvers.c'] )
 
-extmods += [base, blas, lapack, umfpack, cholmod, amd, misc_solvers] 
+extmods += [base, blas, lapack, umfpack, cholmod, amd, misc_solvers]
+
+for mod in extmods:
+    mod.include_dirs += [ SAGE_INCLUDE ]
 
 setup (name = 'cvxopt', 
     description = 'Convex optimization package',
@@ -166,3 +183,4 @@
     ext_modules = extmods,
     package_dir = {"cvxopt": "python"},
     packages = ["cvxopt"])
+
