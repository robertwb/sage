= CVXOPT =

== Description ==

CVXOPT is a free software package for convex optimization based on the Python programming language.

== MAINTAINERS ==
   * William Stein
   * Josh Kantor
   * Harald Schilly
   * Dima Pasechnik

== Download Source ==

NEW:
Downloaded from
   http://abel.ee.ucla.edu/cvxopt/

OLD:
Downloaded from
   http://www.ee.ucla.edu/~vandenbe/cvxopt/

== Releases ==

=== cvxopt-1.1.2 (Dima Pasechnik, August 2010) ===
 * bug-fixing re-release of the spkg:

 * corrected the 64-bit specific int* bug reported by pjeremy
 * turned on GSL extension (this is the default mode for CVXOPT, and GSL is a standard Sage spkg, so
   this makes perfect sense); this in particular allowed to get rid of strange random seed-related
   import bugs uncovered by David Kirkby's spkg-check
   TODO(?): one might want to enchance the code to allow other Sage random sources,
    at the moment only GSL is used in CVXOPT-1.1.2 spkg, apparently it will need an unclear
    to me "with seed(..)" construct.
   TODO: We will need to make sure that CVXOPT is built after GSL
 * modified spkg-check to report test names, cd to appropriate subdirs, and skip .bin files.
   TODO: add more tests.
 * corrected the .patch files in patches/ to be in right order --- just run the makepatchfiles
   script to re-create these files!
 * removed html doc files in src/doc; the .rst doc files are there, so it's a question of
   rebuilding them
   (e.g. one can do sage -sh; cd src/doc; make html)
   TODO: incorporate docs buiding into spkg-install, and/or merge into Sage documentation

=== cvxopt-1.1.2 (Harald Schilly, Dima Pasechnik, David Kirkby, March-July 2010) ===
 * #6456 Update to cvxopt 1.1.2
 * incorporating building the GLPK extension (track #9598)
 * #9525 Correct the fact installation of cvxopt will allways report it was
   successful, even if it failed.
 * Add a spkg-check file, as #9281 listed cvxopt was missing such a file
 * implemented changes requested in comment 28 of track ticket #6456:
 <quote>
  1. I don't think there should be a patches-old directory...
  2. Files are modified in place in the src/ directory...
  3. In the patches directory, the patches should be unified diffs (diff -Naur).
  4. In spkg-install, you should just remove the old,
     unnecessary code instead of just commenting it out.
     Also, I don't think the SAGE_LOCAL check is necessary.
  </quote>

  (kept a harmless SAGE_LOCAL check)

   On building cvxopt extensions:
   the non-required extension are not built;
   however, it is possible to switch on the dsdp and dsl extensions by
   flipping the BUILD_..-flags in setup.py (and modifying dirs for dsdp)
   Remaining extensions were not tested; it should not be hard to have
   them provided the corresponding libs are there (e.g. parts of Sage)

 * modified setup.py to streamline and make it more Sage-like;
   in particular got rid of f77blas and f95 dependences that
   are obsolete, since Sage switched to gfortran
 * rebased Solaris-specific patches from cvxopt-0.9 spkg
   (only cvxopt.h needed to be patched, while the old
    native cvxopt random framework is now gone (since cvxopt-1.1
    at least)
 * modified setup.py and src/python/__init__.py
 * moved old patches to patches-old (solaris, ...) for future reference
 * simplifying spkg-install

=== cvxopt-0.9.p8 (Gonzalo Tornaria, June 19th, 2009) ===

 * Replace perl spkg-install with a bash one.

=== cvxopt-0.9.p7 (Michael Abshoff, September 24th, 2008) ===
 * Work around Solaris 10 problem with complex.h

== Old Comments, prior 1.1.2==

Against policy we patch some files in src/src/C

cholmod.c.patch
cvxopt.h.patch
random.c.patch

Those patches files conditionally include a patches version of Sun's complex.h - see http://bugs.opensolaris.org/bugdatabase/view_bug.do?bug_id=6549313

sun_complex.h

Depending on the Fortran compiler used we copy a different setup.py into the build directory:

setup_f95.py
setup_gfortran.py
