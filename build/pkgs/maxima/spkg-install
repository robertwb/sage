#!/usr/bin/env bash

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

CUR=`pwd`

cd src/

unset MAKE  # this can break things

check_error() {
    if [ $? -ne 0 ]; then
	echo "***********************************************************"
        echo $1
	echo "***********************************************************"
        exit 1
    fi
}

if [ `uname` = "Darwin" ]; then
    ./configure --prefix=$SAGE_LOCAL --with-clisp=clisp.bin 1>"$CUR"/output.log 2>"$CUR"/error.log
    echo "Ignoring errors during configure on Darwin"
else
    ./configure --prefix=$SAGE_LOCAL --with-clisp=clisp.bin
    check_error "Failed to configure Maxima."
fi

if [ `uname` = "Darwin" ]; then
   echo "Now building maxima; this takes a few minutes"
   echo "Since we're using OS X and there is a very weird"
   echo "bug with buffered output while building maxima,"
   echo "you will not be able to see the output of the build"
   echo "as it occurs.  Don't worry, the build process did"
   echo "not hang."
   make >> "$CUR"/output.log  2>> "$CUR"/error.log
else
   make
fi
check_error "Failed to make Maxima."

make install
check_error "Failed to install Maxima."

echo "creating wrapper script with disabled readline"
echo '#!/bin/sh' > "$SAGE_LOCAL"/bin/maxima-noreadline
echo 'SAGE_CLISP_DISABLE_READLINE_HACK="yes"; export SAGE_CLISP_DISABLE_READLINE_HACK' >> "$SAGE_LOCAL"/bin/maxima-noreadline
echo 'maxima "$@"' >> "$SAGE_LOCAL"/bin/maxima-noreadline
chmod 755 "$SAGE_LOCAL"/bin/maxima-noreadline

if [ -f "$DOT_SAGE/maxima_commandlist_cache.sobj" ]; then
   echo "Deleting Maxima commandlist cache. It will be recreated at the next start of Sage"
   rm -f "$DOT_SAGE"/maxima_commandlist_cache.sobj
fi
