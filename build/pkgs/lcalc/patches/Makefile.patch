--- src/src/Makefile	2010-01-31 16:16:45.000000000 +0100
+++ src/src/Makefile	2010-09-19 18:24:23.059332566 +0200
@@ -13,7 +13,7 @@
 # elliptic curve routines. Doing so disables the -e option.
 # g++ with -DINCLUDE_PARI sends a #define INCLUDE_PARI to the preprocessor.

-#PARI_DEFINE = -DINCLUDE_PARI
+PARI_DEFINE = -DINCLUDE_PARI
 #PREPROCESSOR_DEFINE = -DUSE_LONG_DOUBLE

 #OPENMP_FLAG = -fopenmp
@@ -58,9 +58,7 @@
    #MACHINE_SPECIFIC_FLAGS = -mpowerpc -mpowerpc64 -m64
 endif
 
-CCFLAGS =  -Wa,-W -O3 $(OPENMP_FLAG) -Wno-deprecated $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
-#CCFLAGS =  -Wa,-W -O3 $(OPENMP_FLAG)  $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
-#CCFLAGS =  -Wa,-W -O2 -fno-exceptions -Wno-deprecated $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
+CCFLAGS =  $(CXXFLAGS) -O3  $(OPENMP_FLAG)  $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
 
 #warning- O2 doesn't help with -DUSE_LONG_DOUBLE on mac, and actually seems to hurt, making runtime longer
 #by a factor of 1.5
@@ -68,12 +66,12 @@
 
 ifeq ($(PARI_DEFINE),-DINCLUDE_PARI)
     #location of pari.h.
-    LOCATION_PARI_H = /usr/local/include/pari #usual location
+    LOCATION_PARI_H = $(SAGE_LOCAL)/include/pari
 
     #location of libpari.a or of libpari.so
     #depending on whether static or dynamic libraries are being used.
     #On mac os x it's the former, on linux I think usually the latter.
-    LOCATION_PARI_LIBRARY = /usr/local/lib #usual location
+    LOCATION_PARI_LIBRARY = $(SAGE_LOCAL)/lib
 else
     #supplied as a dummy so as to avoid more ifeq's below
     LOCATION_PARI_H = .
@@ -88,26 +86,12 @@
 #For Mac os x we omit shared library options
 
 ifeq ($(OS_NAME),Darwin)
-    LDFLAGS2 =
     DYN_OPTION=dynamiclib
 else
-    LDFLAGS1 = -Xlinker -export-dynamic #not sure why pari calls these when linking but on the web I found
-    #'Libtool provides the `-export-dynamic' link flag (see section Link mode), which does this declaration.
-    #You need to use this flag if you are linking a shared library that will be dlopened'
-    #see notes below
-    #ifeq ($(PARI_DEFINE),-DINCLUDE_PARI)
-       LDFLAGS2 = $(LDFLAGS1) -Xlinker -rpath -Xlinker $(LOCATION_PARI_LIBRARY)
-    #else
-    #    LDFLAGS2 = $(LDFLAGS1)
-    #endif
     DYN_OPTION=shared
 endif
 
-ifeq ($(PARI_DEFINE),-DINCLUDE_PARI)
-    LDFLAGS = $(LDFLAGS2) -L$(LOCATION_PARI_LIBRARY) -lpari
-else
-    LDFLAGS = $(LDFLAGS2)
-endif
+LDFLAGS = -L$(LOCATION_PARI_LIBRARY) -lpari -lgmp
 
 
 
@@ -140,12 +124,12 @@
 OBJECTS = $(OBJ3)
 
 all:
-#	make print_vars
-	make libLfunction.so
-	make lcalc
-	make examples
-#	make find_L
-#	make test
+#	$(MAKE) print_vars
+	$(MAKE) libLfunction.so
+	$(MAKE) lcalc
+	$(MAKE) examples
+#	$(MAKE) find_L
+#	$(MAKE) test
 
 print_vars:
 	@echo OS_NAME = $(OS_NAME)
@@ -262,7 +246,7 @@
 
 
 libLfunction.so: $(OBJ_L)
-	g++ -$(DYN_OPTION)  -o libLfunction.so $(OBJ_L)
+	g++ -$(DYN_OPTION) $(CXXFLAG64) -o libLfunction.so $(OBJ_L)
 
 clean:
 	rm -f *.o lcalc libLfunction.so example_programs/example
