#!/usr/bin/env bash

###########################################
## Singular
###########################################

SRC=`pwd`/src
SHARED=`pwd`/shared

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

# The time stamp of src/Singular/libparse.cc (which is the output from 'flex')
# is a second older than the source file (src/Singular/libparse.l).
# This is probably a result of building on a shared file system with
# two computers not exactly syncronised in time. This caused a problem
# on Solaris, where flex was not installed, but flex would be needed to
# create create src/Singular/libparse.cc
touch src/Singular/libparse.cc
# The same issue with 'configure' which needs
touch src/factory/configure

# we set LD=ld which is troublesome on OSX. Singular figures out LD by
# itself pretty well so we unset it here.
unset LD

# see track ticket #48 -- do this to avoid subtle bug that Rob Gross
# found in build process
unset TMPDIR

## Singular supports parallel builds, but we disable them, for now,
## since they sometimes fail.
#MAKE="make"
#export MAKE
## We clear MAKEFLAGS to fix building multiple spkgs in parallel on OS X.
#MAKEFLAGS=
#export MAKEFLAGS

# disable the dynamic kernel, except on Linux
if [ "$UNAME" = "Linux" ]; then
     DYNAMIC_KERNEL=""
else
     DYNAMIC_KERNEL="--without-dynamic-kernel"
fi

if [ "$UNAME" = "Darwin" ]; then
     MACOSX_DEPLOYMENT_TARGET=10.4
     export MACOSX_DEPLOYMENT_TARGET
fi

if [ "x$SAGE_DEBUG" = "xyes" ]; then
  ENABLE_DEBUG="--enable-debug"
  CXXFLAGS="$CXXFLAGS -O0 -g"
  CFLAGS="$CFLAGS -O0 -g"
else
  ENABLE_DEBUG="--disable-debug"
  # singular-3-0-4-2-20080405 miscompiled with RHEL 5/Itanium
  # when we use "-O3" and the default compiler, so let's use
  # "-O2" for now.
  # singular-3-1-0-2-20090512 test failure every time
  # on *iras* (SUSE Itanium on skynet) when we use "-O2",
  # so let's use "O0" for now (see trac #6360 and #6240)
  if [ `uname -m` = "ia64" ]; then
    CXXFLAGS="$CXXFLAGS -O0 -g"
    CFLAGS="$CFLAGS -O0 -g"
  else
    CXXFLAGS="$CXXFLAGS -O3 -g"
    CFLAGS="$CFLAGS -O3 -g"
  fi
fi

if [ "x$SAGE64" = xyes ]; then
    echo "Building a 64-bit version of Singular"
    CFLAGS="-O2 -g -m64 "
    CXXFLAGS="-O2 -g -m64"
    CPPFLAGS="-O2 -g -m64"
    LDFLAGS="-m64 "; export LDFLAGS
    if [ "x`uname`" = xSunOS ] ; then
      CC="$CC -m64"
      export CC
      CXX="$CXX -m64"
      export CXX
    fi
fi

CPPFLAGS="-I$SAGE_LOCAL/include $CPPFLAGS"

# we are building everything fPIC, this might impose a slight
# performance hit, need to evaluate:

CXXFLAGS="$CXXFLAGS -fPIC"
CFLAGS="$CFLAGS -fPIC"


export CXXFLAGS
export CFLAGS
export CPPFLAGS

clean_headers()
{
    rm -rf $SAGE_LOCAL/include/singular
}

patch()
{
    # work-around patches
    cp patches/assert.h src/factory/

    if [ "$UNAME" = "CYGWIN" ]; then
        # Fine to make this patch on any system, because it is code that is only compiled on Windows.
        cp patches/sing_win.cc src/Singular/
        cp patches/IntegerProgramming-Makefile.in src/IntegerProgramming/Makefile.in
    fi

    # parallel build patches
    cp patches/factory-GNUmakefile.in src/factory/GNUmakefile.in
    cp patches/Singular-Makefile.in src/Singular/Makefile.in
    cp patches/kernel-Makefile.in src/kernel/Makefile.in
    cp patches/Makefile.in src/Makefile.in
}

distclean()
{
     cd $SRC
     make distclean
     rm $SAGE_LOCAL/bin/Singular*
     find . -name *.dl_o -exec rm \{\} \;
     find . -name *.o -exec rm \{\} \;
     find . -name *.og -exec rm \{\} \;
     find . -name *.so -exec rm \{\} \;
     find . -name *.a -exec rm \{\} \;
     rm -f $SAGE_LOCAL/include/factory.h
     rm -f $SAGE_LOCAL/include/factoryconf.h
}

config()
{
    cd $SRC
    ./configure --prefix="$SAGE_LOCAL" \
                --exec-prefix="$SAGE_LOCAL" \
                --bindir="$SAGE_LOCAL"/bin \
                --libdir="$SAGE_LOCAL"/lib \
                --libexecdir="$SAGE_LOCAL"/lib \
                --with-apint=gmp \
                --with-gmp="$SAGE_LOCAL" \
                --with-ntl="$SAGE_LOCAL" \
	        --with-NTL \
	        --without-MP \
                --without-lex \
                --without-bison \
                --without-Boost \
                --enable-gmp="$SAGE_LOCAL" \
                --enable-Singular \
		--enable-factory \
		--enable-libfac \
                --enable-IntegerProgramming \
                --disable-doc  \
                $DYNAMIC_KERNEL \
                --with-malloc=system \
		$ENABLE_DEBUG

    if [ $? -ne 0 ]; then
        echo "Unable to configure Singular."
        exit 1
    fi
}

build_singular()
{
    cd $SRC

    make # Singular + rest

    if [ $? -ne 0 ]; then
        echo "Unable to build Singular."
        exit 1
    fi

    # For some reason the permissions are set for the user to read only
    # for singular's library.  This causes problems on multi-user system
    # install.
    $CHMOD a+r Singular/LIB/*

    cd "$SAGE_LOCAL"
    if [ -d LIB -a ! -h LIB ]; then
        echo "skipping since filenames not case sensitive."
    else
        $RM -f LIB
        if [ "$UNAME" != "Darwin" ]; then
            $LN -sf lib LIB
        fi
    fi

    cd $SRC
    if [ $? -ne 0 ]; then
        echo "Unable to change to directory $SRC"
        exit 1
    fi

    make slibdir="$SAGE_LOCAL/share/singular" install-nolns

    if [ $? -ne 0 ]; then
        echo "Unable to install Singular."
        exit 1
    fi

}


create_singular_script()
{
    # The Singular build annoyingly puts an absolute link to the Singular
    # script in $SAGE_LOCAL/bin/.  So we delete it and make it relative.
    cd $SAGE_LOCAL/bin
    $RM -f Singular singular

    if [ -f Singular-1-0-2 ]; then
        $RM -f Singular-1-0-2   # remove previous version of Singular.
    fi

    # The singular executable is called somewhat randomly depending
    # on platform.  Also, making a symlink doesn't work, since on
    # Windows XP symlinks are sometimes (?) forced to be absolute,
    # so this would break relocatability.
    # (In any case, "ln -s Singular-* Singular" in Cygwin makes an
    #  absolute symlink.  Somehow the gap symlink is relative though...)
    /bin/ls Singular-*
    if [ $? -ne 0 ]; then
        echo "The Singular binary was not installed in $SAGE_ROOT/local/bin/ as it should have been."
        exit 1
    fi

    echo "#!/bin/sh" > Singular
    echo "`/bin/ls Singular-* | tail -1` \$*" >> Singular
    $CHMOD +x Singular

    # Lower case version is convenient.
    $CP -f Singular singular

    $LN -sf Singular sage_singular
}

build_libsingular()
{
    cd $SRC
    if [ $? -ne 0 ]; then
        echo "Unable to change to directory $SRC"
        exit 1
    fi

    make libsingular

    if [ $? -ne 0 ]; then
        echo "Unable to build Singular."
        exit 1
    fi

    make install-libsingular

    #cp kernel/kInline.cc $SAGE_LOCAL/include/singular/

    if [ $? -ne 0 ]; then
        echo "Unable to install libsingular."
        exit 1
    fi
}

build_factory()
{
    cd $SRC/factory

    make distclean

    ./configure --prefix="$SAGE_LOCAL" \
                --exec-prefix="$SAGE_LOCAL" \
                --bindir="$SAGE_LOCAL"/bin \
                --libdir="$SAGE_LOCAL"/lib \
                --libexecdir="$SAGE_LOCAL"/lib \
                --with-apint=gmp \
                --with-gmp="$SAGE_LOCAL" \
                --with-ntl="$SAGE_LOCAL" \
	        --with-NTL \
                --enable-gmp="$SAGE_LOCAL" \
		"$ENABLE_DEBUG"

    if [ $? -ne 0 ]; then
        echo "Error configuring the standalone factory."
        exit 1
    fi

    make
    if [ $? -ne 0 ]; then
        echo "Error building the standalone factory."
        exit 1
    fi

    make install
    if [ $? -ne 0 ]; then
        echo "Error installing the standalone factory."
        exit 1
    fi

    $CP factoryconf.h "$SAGE_LOCAL"/include/
    if [ $? -ne 0 ]; then
        echo "Error copying factory/factoryconf.h to include directory."
    fi
}

build_libfac()
{
    cd $SRC/libfac
    if [ $? -ne 0 ]; then
        echo "Error changing to directory $SRC/libfac"
        exit 1
    fi

    make distclean

    ./configure --prefix="$SAGE_LOCAL" \
                --exec-prefix="$SAGE_LOCAL" \
                --bindir="$SAGE_LOCAL"/bin \
                --libdir="$SAGE_LOCAL"/lib \
                --libexecdir="$SAGE_LOCAL"/lib \
                --with-apint=gmp \
                --with-gmp="$SAGE_LOCAL" \
                --with-ntl="$SAGE_LOCAL" \
	        --with-NTL \
		--enable-factory \
		--enable-libfac \
                --enable-omalloc \
                --enable-gmp="$SAGE_LOCAL" \
		"$ENABLE_DEBUG"

    if [ $? -ne 0 ]; then
        echo "Error configuring libfac."
        exit 1
    fi

    make

    if [ $? -ne 0 ]; then
        echo "Error building libfac."
        exit 1
    fi

    make install

    if [ $? -ne 0 ]; then
        echo "Error installing libfac."
        exit 1
    fi
}

install_docs()
{
    cp $SHARED/singular.hlp $SAGE_LOCAL/share/singular/
    if [ $? -ne 0 ]; then
        echo "Error installing documentation while copying singular.hlp"
        exit 1
    fi
    cp $SHARED/singular.idx $SAGE_LOCAL/share/singular/
    if [ $? -ne 0 ]; then
        echo "Error installing documentation while copying singular.idx"
        exit 1
    fi
}

build()
{
    for i in clean_headers patch distclean config build_singular build_libsingular build_factory build_libfac create_singular_script install_docs ; do
    $i
    if [ $? -ne 0 ]; then
        echo "Error building Singular at stage '$i'."
        exit 1
    fi
    done
}
build
