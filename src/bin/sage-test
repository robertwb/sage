#!/usr/bin/env python

import os, sys, time

argv = sys.argv

try:
    i = argv.index('-sage')
    del argv[i]
    use_sage_only = True
except ValueError:
    use_sage_only = False

opts = ' '.join([X for X in argv if X[0] == '-'])
argv = [X for X in argv if X[0] != '-']

t0 = time.time()

CUR = os.path.abspath(os.curdir)

def abs(f):
    return "[*] %s"%os.path.abspath(f)[len(CUR)+1:]

def skip(F):
    if F == "all.py" or F == ".doctest" or F == "__init__.py" or F[0] == '.' or \
           open(F).readline().find("nodoctest") != -1:
        print "%s (skipping)"%abs(F)
        return True
    sys.stdout.write("%-60s"%abs(F))
    sys.stdout.flush()
    return False

failed = []

SAGE_ROOT=os.environ['SAGE_ROOT']
TMP=SAGE_ROOT + "/tmp/test/"
if not os.path.exists(TMP):
    os.makedirs(TMP)

def test(F, cmd):
    t = time.time()
    if skip(F):
        return
    err = os.system("sage-%s %s 2>/dev/null"%(cmd, F))
    if err != 0:
        failed.append(abs(F))
    os.system("mv -f __test* %s 2>/dev/null"%(TMP))
    print "\t [%.1f s]"%(time.time() - t)
    return err


def test_file(F):
    global CUR
    os.chdir(CUR)
    if not os.path.exists(F):
        if F[:6] != "__test":
            print "ERROR: File %s/%s is missing"%(os.curdir,F)
            failed.append('%s/%s'%(os.curdir,F))
        return
    if os.path.isfile(F):
        dir, file = os.path.split(F)
        if dir != '':
            os.chdir(dir)
            F = file

    base, ext = os.path.splitext(F)
    if use_sage_only or ext in ['.sage']:
        test(F, 'doctest_tex')
    elif ext in ['.py', '.pyx', '.tex']:
        test(F, 'doctest '+opts)
    elif os.path.isdir(F) and not ".doctest"  in F and not '.old' in F \
             and not '#' in F and not '/notes' in F:
        ld = os.listdir(F)
        if not ('__nodoctest__' in ld):
            for L in ld:
                test_file('%s/%s'%(F,L))

files = argv[1:]
if len(files) == 0:
    files = os.listdir('.')

for F in files:
    test_file(F)

print " "
print "-"*int(70)

if len(failed) == 0:
    print "All tests passed!"
else:
    print "The following tests failed:\n"
    print "\n\t" + "\n\t".join(failed)

print "Total time for all tests: %.1f seconds"%(time.time() - t0)
