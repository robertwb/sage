#!/usr/bin/env sage.bin

import os, sys

files=sys.argv[1:]

if len(files) == 0:
    print "Usage: %s <file1.sage> <file2.sage>..."%sys.argv[0]
    print "Creates files file1.sage.py, file2.sage.py ... that are the SAGE"
    print "preparsed versions of file1.sage, file2.sage ..."
    sys.exit(1)


files_so_far = []
def do_preparse(f, files_before=[]):
    if f in files_so_far:
        return
    files_so_far.append(f)
    if not os.path.exists(f):
        print "%s: File %s is missing"%(sys.argv[0], f)
        return
    if f[-3:] == '.py':
        return
    if f[-5:] != '.sage':
        print "%s: Unknown file type %s"%f
        sys.exit(1)
    F = open(f).read()

    from sage.misc.preparser  import preparse_file
    G = preparse_file(F, magic=False, do_time=False, ignore_prompts=False)
    G = do_load_and_attach(G, f, files_before)
    fname = '%s.py'%f
    open(fname, 'w').write(G)

def do_load_and_attach(G, file, files_before):
    s = 'from sage.all import *\n'
    for t in G.split('\n'):
        z = t.lstrip().split()
        if len(z) > 0 and z[0] in ['load', 'attach']:
            for w in z[1:]:
                name = w.replace(',','').replace('"','').replace("'","")
                #print "'%s'"%name, files_before
                if name in files_before:
                   print "WARNING: not loading %s (in %s) again since would cause circular loop"%(name, file)
                   continue
                if name[-5:] == '.sage':
                    do_preparse(name, files_before + [file])
                    s += 'execfile("%s.py")\n'%name
                elif name[-3:] == '.py':
                    s += 'execfile("%s")\n'%name
        else:
            s += t + '\n'
    return s

for f in files:
    do_preparse(f)
