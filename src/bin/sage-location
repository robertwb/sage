#!/usr/bin/env sage.bin

import os

SAGE_ROOT = os.environ['SAGE_ROOT']

location_file = '%s/local/lib/sage-current-location.txt'%SAGE_ROOT

def install_moved():
    if not os.path.exists(location_file) or open(location_file).read() != SAGE_ROOT:
        if os.path.exists(location_file):
             print "'%s' '%s'"%(open(location_file).read(), SAGE_ROOT)
        open(location_file,'w').write(SAGE_ROOT)
        return True
    return False

def update_hardcoded_files(path):
    # The only known files with hard coded paths.
    if os.path.isdir(path):
        for X in os.listdir(path):
            update_hardcoded_files('%s/%s'%(path,X))
    else:
        P = path[-4:]
        if P == '.pyo' or P == '.pyc':
            try:
                os.unlink(path)
            except OSError, msg:
                print msg

def __mysig(a,b):
    raise KeyboardInterrupt, "computation timed out because alarm was set for %s seconds"%__alarm_time

import signal
signal.alarm(60)

if __name__ ==  '__main__':
    # Check if SAGE has moved, and if so delete all .pyo and .pyc files
    # in the python libs directory, so they are rebuilt.
    if install_moved():
        print "The SAGE install tree may have moved."
        print "Regenerating Python.pyo and .pyc files that hardcode the install PATH (please wait less than a minute)..."
        update_hardcoded_files(SAGE_ROOT + '/local/lib/python/')
