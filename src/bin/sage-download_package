#!/usr/bin/env python
#####################################################
#
# Download to the current directory a SAGE package.
#
#####################################################

import os, sys, urllib

if not os.environ.has_key("SAGE_ROOT"):
     print "The environment variable SAGE_ROOT must be set."
     sys.exit(1)
SPKG_ROOT="%s/spkg/"%os.environ["SAGE_ROOT"]

if not os.environ.has_key("SAGE_SERVER"):
     print "The environment variable SAGE_SERVER must be set."
     sys.exit(1)
SAGE_SERVER=os.environ['SAGE_SERVER']

if len(sys.argv) < 2:
     print "Usage: %s <package name> <package name> ..."%sys.argv[0]
     sys.exit(1)



cur = 0
def reporthook(block, size, total):
     global cur
     n = block*size*50/total
     if n > cur:
          cur = n
          sys.stdout.write('.')
          sys.stdout.flush()

def download_file(file):
     if file[-5:] != ".spkg":
          file += ".spkg"
     url = "%s/%s"%(SAGE_SERVER, file)
     i = url.rfind('/')
     file = url[i+1:]
     print url, "-->", file
     print "[",
     global cur
     cur = 0
     urllib.urlretrieve(url, file, reporthook)
     print "]"
     if os.path.getsize(file) < 1000 and open(file).read().find("404 Not Found") != -1:
          os.unlink(file)
          return False
     return True

for F in sys.argv[1:]:
     if not download_file("optional/%s"%F):
          if not download_file("standard/%s"%F):
               if not download_file("experimental/%s"%F):
                    if not download_file("archive/%s"%F):
                         print "Unable to download %s"%F
                         print "Please see %s for a list of valid packages"%SAGE_SERVER
