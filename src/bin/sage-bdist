#!/bin/sh
########################################################
# Build SAGE source distribution
# This script should be called by the SAGE script
########################################################

PKGDIR=spkg

CUR=`pwd`

if [ $UNAME = "Darwin" ]; then
    OPT="PR"
else
    OPT="pr"
fi

if [ $# -ne 2 ]; then
   echo "Usage: $0 <SAGE_VERSION> <SAGE_ROOT>"
   exit 1
fi

SAGE_VERSION=$1
SAGE_ROOT=$2
export SAGE_VERSION SAGE_ROOT

TARGET=sage-"$SAGE_VERSION"-`uname -m`-`uname`
TARGET=`echo $TARGET | sed -e 's/ //'`     #no blank spaces
TMP="$CUR/tmp/$TARGET"

if [ ! -d "$CUR/tmp" ]; then
   mkdir "$CUR/tmp"
fi

if [ -d "$TMP" ]; then
   rm -rf "$TMP"
fi

mkdir $TMP

cd $SAGE_ROOT
cp -$OPT examples local makefile *.txt *.sage sage ipython matplotlibrc data $TMP/
cp -L$OPT doc $TMP/
if [ -d devel/sage ]; then
   cd devel/sage
   mkdir $TMP/devel/
   mkdir $TMP/devel/sage/
   cp -$OPT MANIFEST.in README* install sage setup.py spkg-* $TMP/devel/sage/
fi

cd $SAGE_ROOT
if [ -d $PKGDIR ]; then
   cd $PKGDIR
   mkdir $TMP/$PKGDIR
   mkdir $TMP/$PKGDIR/build
   mkdir $TMP/$PKGDIR/optional
   cp -$OPT installed $TMP/$PKGDIR/
   cp -$OPT standard $TMP/$PKGDIR/
   cp  install README.txt gen_html $TMP/$PKGDIR/
   cd $TMP/$PKGDIR/standard/
   for F in `/bin/ls *.spkg`; do
       echo "Placeholder spkg file so this binary version of SAGE knows this package version used when installing SAGE." > $F
   done
fi

cd $CUR/tmp/
tar zcvf $TARGET.tar.gz $TARGET

if [ ! -d $SAGE_ROOT/dist ]; then
    mkdir $SAGE_ROOT/dist
fi

if [ -d $SAGE_ROOT/dist/$TARGET ]; then
    rm -rf "$SAGE_ROOT/dist/$TARGET"
fi

mv $TARGET $SAGE_ROOT/dist/
mv $TARGET.tar.gz $SAGE_ROOT/dist/